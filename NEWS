NEWS for the R Package Luminescence

Changes in version 0.6.0 (,2016):

  New functions:

         • ‘plot_DetPlot()’: Plots the equivalent dose (De) in
           dependency of the chosen signal integral (cf. Bailey et al.,
           2003; #23).

  Changes in S4-objects and related methods:

         • ‘set_RLum’

             • The function ‘set_RLum()’ gained the new argument ‘.uid’
               which is by default presetting the slot with the same
               name using the internal function ‘.create_UID()’.  In
               the previous package version this slot of the
               RLum-object was filled automatically as well, but the
               way it was done was a little bit semitransparent and a
               different function was used.

         • ‘RLum’

             • The slot ‘.uid’ from objects of this class has now the
               prototype ‘NA_character_’.  The unique id is only set if
               the corresponding ‘set_RLum’ function is called, which
               should be, however, the usual case,

             • all inhertied object classes of the class ‘RLum’ gained
               a new slot called ‘info’, with this a more consistent
               workflow with the objects should be possible, before
               only objects of the class ‘RLum.Data’ had such slot,

             • all inherited object classes gained a new slot called
               ‘.pid’. This slot is reserved for storing parent ids so
               that objects can be nested at free will.

  Removed functions:

         • ‘readBIN2R()’, replacement ‘read_BIN2R()’,

         • ‘readSPE2R()’, replacement ‘read_SPE2R()’,

         • ‘readXSYG2R()’, replacement ‘read_XSYG2R()’,

         • ‘writeR2BIN()’, replacement ‘write_R2BIN()’,

         • ‘get_RLum.Data.Curve()’, replacement ‘get_RLum()’,

         • ‘get_RLum.Data.Spectrum()’, replacement ‘get_RLum()’,

         • ‘get_RLum.Data.Image()’, replacement ‘get_RLum()’,

         • ‘get_RLum.Analysis()’, replacement ‘get_RLum()’,

         • ‘get_RLum.Results()’, replacement ‘get_RLum()’,

         • ‘set_RLum.Data.Curve()’, replacement ‘set_RLum()’,

         • ‘set_RLum.Data.Spectrum()’, replacement ‘set_RLum()’,

         • ‘set_RLum.Data.Image()’, replacement ‘set_RLum()’,

         • ‘set_RLum.Analysis()’, replacement ‘set_RLum()’,

         • ‘set_RLum.Results()’, replacement ‘set_RLum()’,

         • ‘Risoe.BINfileData2RLum.Data.Curve’, replacement
           ‘.Risoe.BINfileData2RLum.Data.Curve’ The function was made
           an internal function, as this function was used only rarely
           by users, but often needed internally. The function and its
           functionally is still available under its new name but a lot
           of integrity checks had been removed from the code, which
           doubles the speed when transforming objects, but makes the
           function failing fast.

  Bugfixes and changes:

         • ‘analyse_SAR.CWOSL()’

             • The function will not stop with an error if no 'OSL' or
               'IRSL' record is detected, but return ‘NULL’ and print a
               warning,

             • under really rare circumstances, many recycling points
               and recuperation points the function could crash
               (fixed).

         • ‘apply_CosmicRayRemoval()’

             • Argument ‘silent’ renamed to ‘verbose’,

             • new argument ‘method.Pych.threshold_factor’ added to
               have a better control for the threshold value used for
               the removal,

             • new argument ‘MARGIN’ added to allow the application of
               the methods along the wavelength or the time.

         • ‘calc_FadingCorr()’

             • Table column headers now have all capital letters,

             • minor performance improvements.

         • ‘calc_OSLLxTxRatio()’

             • New argument ‘digits’ introduced to allow direct
               rounding of the numbers,

             • add argument ‘sig0’ to allow for an extra component of
               error.

         • ‘plot_RLum.Analysis()’

             • All ‘...’ arguments can now be provided as ‘vector’ or
               ‘list’ to gain more control of the plot appearance,

             • argument ‘abline’ now works also in combination with
               ‘combine = TRUE’ and allows to set ablines independently
               over different plots (#260),

             • automatic axes labelling improved for ‘combine = TRUE’,

             • support further ‘...’ argument ‘legend’ (TRUE/FALSE).

         • ‘plot_GrowthCurve()’

             • If the input data contain a least one infinite value the
               function will not crash any longer, but return ‘NULL’
               (#263, Norbert Mercier),

             • check for insufficient values in the data set and return
               ‘NULL’ (before the function crashed).

         • ‘merge_RLum.Data.Curve()’

             • Support further merge operations: ‘median’, ‘var’, ‘sd’,
               ‘min’, ‘max’.

         • ‘read_BIN2R()’

             • Handling of corrupt BIN-files improved, the functions
               tries to import whatever possible,

             • the argument ‘n.records’ was not respected under rare
               circumstances.

         • ‘Risoe.BINfileData2RLum.Analysis()’

             • Single grain data had not been converted correctly to
               ‘RLum.Analysis’ objects.  Each grain within a position
               should represent one ‘RLum.Analysis’ object with a set
               of curve. This was so far not the case; corrected.

  Internals:

         • New internal function ‘.create_UID()’ added to create the
           unique identifier for RLum-objects. The new function reduces
           significantly the overhead while producing the objects.

         • Package 'digits' removed from the dependency list and the
           functionality (creating a unique identifier for
           RLum-objects) was implemented using a self-written function.

