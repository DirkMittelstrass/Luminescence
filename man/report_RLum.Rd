% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report_RLum.R
\name{report_RLum}
\alias{report_RLum}
\title{Create HTML report for (RLum) objects}
\usage{
report_RLum(object, file = tempfile(), title = "RLum.Report",
  timestamp = TRUE, launch.browser = FALSE, quiet = TRUE, clean = TRUE,
  ...)
}
\arguments{
\item{object}{(\bold{required}): 
The object to be reported on, preferably of any \code{RLum}-class.}

\item{file}{\code{\link{character}} (\bold{with default}): 
A character string naming the output file. If no filename is provided a 
temporary file is created.}

\item{title}{\code{\link{character}} (with default):
A character string specifying the title of the document.}

\item{timestamp}{\code{\link{logical}} (with default):
\code{TRUE} to add a timestamp to the filename (suffix).}

\item{launch.browser}{\code{\link{logical}} (with default):
\code{TRUE} to open the HTML file in the system's default web browser after
it has been rendered.}

\item{quiet}{\code{\link{logical}} (with default):
\code{TRUE} to supress printing of the pandoc command line.}

\item{clean}{\code{\link{logical}} (with default): 
\code{TRUE} to clean intermediate files created during rendering.}

\item{...}{further arguments passed to or from other methods 
(currently not used).}
}
\value{
Writes a HTML and .Rds file.
}
\description{
This function creates a HTML report for a given object, listing its complete
structure and content. The object itself is saved as a serialised .Rds file.
The report file serves both as a convenient way of browsing through objects with 
complex data structures as well as a mean of properly documenting and saving
objects.
}
\details{
The HTML report is created with \code{\link[rmarkdown]{render}} and has the
following structure:

\tabular{ll}{
 \bold{Section} \tab \bold{Description} \cr
 \code{Header} \tab A summary of general characteristics of the object \cr
 \code{Object content} \tab A comprehensive list of the complete structure
 and content of the provided object. \cr
 \code{Object structure} \tab Summary of the objects structure given as a table \cr
 \code{File} \tab Information on the saved RDS file \cr
 \code{Session Info} \tab Captured output from sessionInfo() \cr
 \code{Plots} \tab (optional) For \code{RLum-class} objects a variable number of plots \cr
}
}
\note{
This function requires the R packages 'rmarkdown' and 'pander'.
}
\section{Function version}{
 0.1.0
}
\examples{

\dontrun{
## Example: RLum.Results ----

# load example data
data("ExampleData.DeValues")

# apply the MAM-3 age model and save results
mam <- calc_MinDose(ExampleData.DeValues$CA1, sigmab = 0.2) 

# create the HTML report
report_RLum(object = mam, file = "~/CA1_MAM.Rmd",
            timestamp = FALSE,
            title = "MAM-3 for sample CA1")

# when creating a report the input file is automatically saved to a 
# .Rds file (see saveRDS()).
mam_report <- readRDS("~/CA1_MAM.Rds")
all.equal(mam, mam_report)


## Example: Temporary file & Viewer/Browser ----

# (a)
# Specifying a filename is not necessarily required. If no filename is provided,
# the report is rendered in a temporary file. If you use the RStudio IDE, the
# temporary report is shown in the interactive Viewer pane.
report_RLum(object = mam)

# (b)
# Additionally, you can view the HTML report in your system's defaul web browser.
report_RLum(object = mam, launch.browser = TRUE)


## Example: RLum.Analysis ----

data("ExampleData.RLum.Analysis")

# create the HTML report (note that specifying a file
# extension is not necessary)
report_RLum(object = IRSAR.RF.Data, file = "~/IRSAR_RF")


## Example: RLum.Data.Curve ----

data.curve <- get_RLum(IRSAR.RF.Data)[[1]]

# create the HTML report
report_RLum(object = data.curve, file = "~/Data_Curve")

## Example: Any other object ----
x <- list(x = 1:10, 
          y = runif(10, -5, 5), 
          z = data.frame(a = LETTERS[1:20], b = dnorm(0:9)),
          NA)

report_RLum(object = x, file = "~/arbitray_list")
}
}
\author{
Christoph Burow, University of Cologne (Germany) \cr
}
\seealso{
\code{\link[rmarkdown]{render}}
}

